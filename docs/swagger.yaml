basePath: /
definitions:
  common.BuildingCreateRequest:
    properties:
      city:
        description: название города (если есть), используем при создании записей
          в БД, если такого еще нет
        type: string
      city_id:
        type: integer
      house:
        type: integer
      point:
        type: string
      street:
        description: название улицы (если есть), используем при создании записей в
          БД, если такой улици еще нет
        type: string
      street_id:
        type: integer
    required:
    - house
    type: object
  common.CompanyCreateRequest:
    properties:
      building:
        properties:
          city_id:
            description: id города должен существовать в БД
            type: integer
          house:
            type: integer
          point:
            description: в формате "(1.00234567, -90.00876211)"
            type: string
          street_id:
            description: id улицы с привязкой к городу должен существовать в БД
            type: integer
        type: object
      name:
        type: string
      phones:
        items:
          properties:
            number:
              description: номер телефона
              type: string
          type: object
        type: array
      rubric:
        items:
          properties:
            id:
              description: id рубрики должен существовать в БД
              type: integer
          type: object
        type: array
    type: object
  common.CompanyResponse:
    properties:
      name:
        type: string
      phones:
        items:
          $ref: '#/definitions/common.Phone'
        type: array
    type: object
  common.Phone:
    properties:
      number:
        type: string
    type: object
  handler.errorResponse:
    properties:
      message:
        type: string
    type: object
host: localhost:80
info:
  contact: {}
  description: API Server for company catalog
  title: Catalog App API
  version: 0.0.1
paths:
  /api/building/:
    post:
      description: Add building into database
      operationId: add
      parameters:
      - description: Building created info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/common.BuildingCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: id
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Add building
      tags:
      - Building
  /api/building/all-company:
    get:
      description: Get all company registered in a building
      operationId: getAllCompany
      parameters:
      - description: City id
        in: query
        name: city_id
        required: true
        type: integer
      - description: Street id
        in: query
        name: street_id
        required: true
        type: integer
      - description: House id
        in: query
        name: house
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/common.CompanyResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Get all company in a building
      tags:
      - Building
  /api/company/:
    get:
      description: Get company by id
      operationId: getCompany
      parameters:
      - description: Company id
        in: query
        name: company_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.CompanyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Get company by id
      tags:
      - Company
    post:
      consumes:
      - application/json
      description: Creating company with minimal required data
      operationId: createCompany
      parameters:
      - description: Company created info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/common.CompanyCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: id
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Create company
      tags:
      - Company
  /api/rubric/all-company:
    get:
      description: Get all rubric company (without pagination)
      operationId: getAllRubricCompany
      parameters:
      - description: Rubric id
        in: query
        name: rubric_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/common.CompanyResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Get all company in a rubric
      tags:
      - Rubric
swagger: "2.0"
